
import java.util.Date;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.lang.Math;

public class ServiceInfo extends DogBasicInfo
{

    public String dateArrive; 
    public String dateDepart; 
    public String timeOut;
    public String groomService;
    public float costGroom;
    public String boardingService; 
    public float costBoarding;
    public String daycareService;
    public float costDaycare;
    public String additionalService;
    public float costAdditionalService;
    public float costTotalServices;
    
    public ServiceInfo(){
        
        dateArrive = "";
         dateDepart= "";
         timeOut = "";
         groomService = "";
         costGroom = 0;
         boardingService = "";
         costBoarding = 0;
         daycareService = "";
         costDaycare = 0;
         additionalService = "";
         costAdditionalService = 0;
         costTotalServices = 0;
        }
        
    /**
     * Constructor for objects of class serviceInfo
     */
    public ServiceInfo(String arrival, String departure, String leaveTime, String g, float cg, String bs, float cb, String ds, float cd, String as, float cas){
    
         dateArrive = arrival;
         dateDepart= departure;
         timeOut = leaveTime;
         groomService = g;
         costGroom = cg;
         boardingService = bs;
         costBoarding = cb;
         daycareService = ds;
         costDaycare = cd;
         additionalService = as;
         costAdditionalService = cas;
         costTotalServices = costGroom + costBoarding + costDaycare + costAdditionalService;                       
    }
    
    public void setArrival(String arrival){
        
        dateArrive = arrival;
    }
    
    public String getArrival(){
        return dateArrive;
        
    }

    public int daysBetween(String arrive, String departure){
        SimpleDateFormat sdf = new SimpleDateFormat("mm/dd/yyyy");
        int days =-1;
        try{
            
            Date dateArrive = sdf.parse(arrive);
            Date dateDepart = sdf.parse(departure); 
            days = (int) Math.abs((dateDepart.getTime() - dateArrive.getTime())/86400000);
            
            
            
        }
        catch (Exception e){
        }
        return days;
    }

    public void setDeparture(String departure){
        
        dateDepart = departure;
    }
    
    public String getDeparture(){
        return dateDepart; 
    }
    
    public void setTimeout(String leaveTime){
        
        timeOut = leaveTime;
    }
    
    public String getTimeout(){
        return timeOut;
    }
    
    
    public void setTotalCost(float costGroom, float costBoarding, float costDaycare, float costAdditionalServices){
        costTotalServices = costGroom + costBoarding + costDaycare + costAdditionalServices;
    }
    
    
    /* returns cost of Dogs services
     * no param
     */
    public float getTotalCost(){
        return costTotalServices;
    }
    /* sets what grooming services the dog will have
     * @param String 
     */
    public void setGroomService(String g)
    {
        groomService = g;
    }
    
    /* returns the grooming services provided
     * no param
     */
    public String getGroomService()
    {
        return groomService;
    }
    
    /*sets the cost of the groom for this dog
     * @param Float cost of the groom 
     */
    public void setGroomCost(float cg)
    {
         costGroom= cg;
    }
    
    /*returns the cost of the grooming services
     * no param
     */
    public float getGroomCost()
    {
        return costGroom;
    }
    
    /*sets the Boarding Service for this dog
     * parameter string boarding service
     */
    public void setBoardingService(String bs){
        boardingService = bs;
    }
    
    /*returns the boarding service for this dog
     * no param
     */
    public String getBoardingService(){
        return boardingService; 
    }
    
    /*sets the cost of boarding
     * param float boarding cost
     */
    public void setBoardingCost(int days){
        
        costBoarding = (float) (30 * days);
    }
    
    /*returns the boarding cost
     * no param
     */
    public float getBoardingCost(){
        return costBoarding;
    }
    
    /*sets the daycare service
     * param string daycare service
     */
    public void setDaycareService(String ds){
        daycareService = ds;
    }


    /*returns the daycare service
     * no param
     */
    public String getDaycareService(){
        return daycareService;
    }
    
    /*set cost of daycare service
     * param cost of daycare service
     */
    public void setCostDaycare(float cd){
        costDaycare = cd;
    }
    
    /*returns the cost of daycare services
     * no param
     */
    public float getCostDaycare(){
        return costDaycare; 
    }
    
    /*set cost of additional services
     * param string additional service
     */
    public void setAdditionalService(String as){
        additionalService = as;
    }
    
    public String getAdditionalService(){
        return additionalService;
    }
    
    /*returns the cost of additional services
     * no param
     */
    public float getCostAdditionalService(){
        return costAdditionalService;
    }
    
    
    
    public String dogInfo(){
        System.out.println("Date Arrive: " + dateArrive); 
        System.out.println("Date Depart: " + dateDepart); 
        System.out.println("Time Leaving: " + timeOut);
        System.out.println("Boarding Cost $" + costBoarding); 
        System.out.println("Groom Cost $" + costGroom);
        System.out.println("Daycare Cost $" + costDaycare);        
        System.out.println("Additional Services Cost $" + costAdditionalService); 
        System.out.println("Total Cost: $" + costTotalServices);
        return ""; 
    }
    
    public String serviceInfo(){
        StringBuilder sb = new StringBuilder();
        sb.append("Arrival Date: " + dateArrive).append(System.getProperty("line.separator"));
        sb.append("Departure Date: " + dateDepart).append(System.getProperty("line.separator"));
        sb.append("Time Out: " + timeOut).append(System.getProperty("line.separator"));
        sb.append("Boarding Service: " + boardingService).append(System.getProperty("line.separator"));
        sb.append("Cost of Boarding: $" + costBoarding).append(System.getProperty("line.separator"));
        sb.append("Grooming Service: " + groomService).append(System.getProperty("line.separator"));
        sb.append("Cost of Groom: $" + costGroom).append(System.getProperty("line.separator"));
        sb.append("Daycare Service: " + daycareService).append(System.getProperty("line.separator"));
        sb.append("Cost of Daycare: $" + costDaycare).append(System.getProperty("line.separator"));
        sb.append("Additional Services: " + additionalService).append(System.getProperty("line.separator"));
        sb.append("Cost of Additional Services: $" + costAdditionalService).append(System.getProperty("line.separator"));
        sb.append("Total Cost for Visit: $" + costTotalServices).append(System.getProperty("line.separator"));
        return sb.toString();
    }
    
    public String toString(){
        return "Arrival Date: " + dateArrive + System.lineSeparator() + "Departure Date: " + dateDepart + 
        System.lineSeparator() + "Time out: " + timeOut + System.lineSeparator() + "Boarding Service: " + 
        boardingService + System.lineSeparator() + "Cost of Boarding: " + costBoarding + System.lineSeparator()
        + "Grooming Service: " + groomService + System.lineSeparator() + "Cost of Groom: " + costGroom + 
        System.lineSeparator() + "Daycare Service: " + daycareService + System.lineSeparator() + "Cost of Daycare " +
        costDaycare + System.lineSeparator() + "Additional Services: " + additionalService + System.lineSeparator()
        + "Cost of Additional Services $" + costAdditionalService + System.lineSeparator() + "Total Cost for Visit $" + 
        costTotalServices + System.lineSeparator() + System.lineSeparator(); 
    }
    
    public void serviceFileInfo(){
        BufferedWriter output;        
        String folderPath = "C:\\Users\\corn_\\OneDrive\\Documents\\dogFiles\\" + dogFirstname + dogLastname + "\\Services";
        File serviceDir = new File(folderPath);
        try{
            serviceDir.mkdirs();            
        }
        catch (SecurityException e){
        }
        String serviceFileName = folderPath + "\\" + dogFirstname + "Service.txt";
        try{
            File serviceFile = new File(serviceFileName);
            output = new BufferedWriter(new FileWriter(serviceFileName));
            output.write(serviceInfo());
            output.close();
        }
        catch (IOException e){
            
        }
    }
}

