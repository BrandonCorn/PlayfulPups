
import java.io.File;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException; 
import java.io.ObjectOutputStream;
import java.io.FileOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectOutput;
import java.io.BufferedOutputStream;
import java.io.FileInputStream;
import java.util.Scanner;


public class dogServices 
{
    tenure dog;
    public  void dogService()throws IOException{
   
        Scanner sc = new Scanner(System.in);
        System.out.println("Is this dog new?(yes/no): ");
        String newDog = sc.nextLine();
        if (newDog.equalsIgnoreCase("yes")){
            //dog parent info
            tenure dog = new tenure();
            dog.createUniqueId();
            System.out.println("Parent's First Name; ");
            dog.setParentFirstName(sc.nextLine());
            System.out.println("Parent's Last Name: ");
            dog.setParentLastName(sc.nextLine());
            System.out.println("Parent's address: ");
            dog.setParentAddress(sc.nextLine());
            System.out.println("Parent's Phone Number: ");
            dog.setParentPhoneNumber(sc.nextLine());
            
            
            
     
            //dog basic info
            System.out.println("Dog's First Name: ");
            dog.setFirstname(sc.nextLine());
            System.out.println("Dog's Last Name: ");
            dog.setLastname(sc.nextLine()); 
            System.out.println("Dog's breed: ");
            String breed = sc.nextLine();
            dog.setdogBreed(breed);
         
            //dog info if staying 
            System.out.print("Is " + dog.getFirstname() + " " + dog.getLastname() + " here for a service?(yes/no):  "); 
            String hereForService = sc.nextLine();
            System.out.println("");
            if (hereForService.equalsIgnoreCase("yes")){
             System.out.print(dog.getFirstname() + "'s cubby number: ");
             dog.setCubby(sc.nextInt());
             sc.nextLine();
             
             System.out.print("Arrival date: ");
             dog.setArrival(sc.nextLine());
             System.out.println("Departure date: "); 
             dog.setDeparture(sc.nextLine()); 
             System.out.println("Time out: "); 
             dog.setTimeout(sc.nextLine());
             System.out.println("Is " + dog.getFirstname() + " " + dog.getLastname() + " here for Boarding, Grooming, Daycare: "); 
             String service = sc.nextLine();
             if (service.equalsIgnoreCase("boarding")){
                 dog.setBoardingService(service);
                 //ENTER THE PRICE FOR THE BOARDING (DEPARTURE DATE-ARRIVAL DATE
                 
                 System.out.println("Is " + dog.getFirstname() + " being groomed?(yes/no): "); 
                 String groom = sc.nextLine(); 
                 if (groom.equalsIgnoreCase("yes")){
                     System.out.print("What groom Service(s): ");
                     dog.setGroomService(sc.nextLine()); 
                     System.out.print("Groom price: ");
                     dog.setGroomCost(sc.nextFloat());
                     sc.nextLine();
                     System.out.println("");
                     dog.setTotalCost(dog.getGroomCost(),dog.getBoardingCost(),dog.getCostDaycare(),dog.getCostAdditionalService());
                     System.out.println(dog.dogBasicInfo());
                     System.out.println(dog.dogInfo());
                    }
                }
             else if (service.equalsIgnoreCase("daycare")){
                 dog.setDaycareService(service);
                 System.out.print("Daycare cost: ");
                 dog.setCostDaycare(sc.nextFloat()); 
                 sc.nextLine();
                 System.out.println(""); 
                 dog.setTotalCost(dog.getGroomCost(),dog.getBoardingCost(),dog.getCostDaycare(),dog.getCostAdditionalService());
                 System.out.println(dog.dogBasicInfo());
                 System.out.println(dog.dogInfo());
                 
                }
             
             else if (service.equalsIgnoreCase("grooming")){
                   dog.setGroomService(service);
                   System.out.print("What groom Service(s): ");
                   dog.setGroomService(sc.nextLine()); 
                   System.out.print("Groom price: ");
                   float groomPrice = sc.nextFloat();
                   dog.setGroomCost(sc.nextFloat());
                   sc.nextLine();
                   System.out.println("");
                   
                   System.out.print("Is " + dog.getFirstname() + " participating in daycare?(yes/no): ");
                   String daycareService = sc.nextLine();
                   if (daycareService.equalsIgnoreCase("yes")){
                        dog.setDaycareService(daycareService);
                        System.out.print("Daycare cost: ");
                        float daycareCost = sc.nextFloat(); 
                        dog.setCostDaycare(daycareCost);
                        sc.nextLine();
                        System.out.println("");
                        dog.setTotalCost(dog.getGroomCost(),dog.getBoardingCost(),dog.getCostDaycare(),dog.getCostAdditionalService());
                        System.out.println(dog.dogBasicInfo());
                        System.out.println(dog.dogInfo());
                    }
                }
            }
        }
        else if (newDog.equalsIgnoreCase("no")){
            tenure dog = new tenure();
            System.out.println("Dog's First Name: ");
            dog.setFirstname(sc.nextLine());
            System.out.println("Dog's Last Name: ");
            dog.setLastname(sc.nextLine()); 
            System.out.println("Dog's breed: ");
            String breed = sc.nextLine();
            dog.setdogBreed(sc.nextLine());
     
            //dog info if staying 
            System.out.print("Is " + dog.getFirstname() + " " + dog.getLastname() + " here for a service?(yes/no):  "); 
            String hereForService = sc.nextLine(); 
            if (hereForService.equalsIgnoreCase("yes")){
                System.out.print(dog.getFirstname() + "'s cubby number: ");
                dog.setCubby(sc.nextInt());
                sc.nextLine();
                System.out.print("Arrival date: ");
                dog.setArrival(sc.nextLine());
                System.out.print("Departure date: "); 
                dog.setDeparture(sc.nextLine()); 
                System.out.println("Time out: "); 
                dog.setTimeout(sc.nextLine());
                System.out.println("Is " + dog.getFirstname() + " " + dog.getLastname() + " here for Boarding, Grooming, Daycare: "); 
                String service = sc.nextLine(); 
                if (service.equalsIgnoreCase("boarding")){
                    dog.setBoardingService(service);
                    //ENTER THE PRICE FOR THE BOARDING (DEPARTURE DATE-ARRIVAL DATE
             
                    System.out.println("Is " + dog.getFirstname() + " being groomed?(yes/no): "); 
                    String groom = sc.nextLine(); 
                    if (groom.equalsIgnoreCase("yes")){
                        System.out.print("What groom Service(s): ");
                        dog.setGroomService(sc.nextLine()); 
                        System.out.print("Groom price: ");
                        float groomPrice = sc.nextFloat();
                        dog.setGroomCost(sc.nextFloat());
                        sc.nextLine();
                        System.out.println("");
                        dog.setTotalCost(dog.getGroomCost(),dog.getBoardingCost(),dog.getCostDaycare(),dog.getCostAdditionalService());
                        System.out.println(dog.dogBasicInfo());
                        System.out.println(dog.dogInfo());
                        }
            }
                else if (service.equalsIgnoreCase("daycare")){
                    dog.setDaycareService(service);
                    System.out.print("Daycare cost: ");
                    float daycareCost = sc.nextFloat(); 
                    dog.setCostDaycare(sc.nextFloat()); 
                    sc.nextLine();
                    System.out.println("");
                    dog.setTotalCost(dog.getGroomCost(),dog.getBoardingCost(),dog.getCostDaycare(),dog.getCostAdditionalService());
                    System.out.println(dog.dogBasicInfo());
                    System.out.println(dog.dogInfo());
                    }
                
                else if(service.equalsIgnoreCase("grooming")){
                    dog.setGroomService(service);
                    System.out.print("What groom Service(s): ");
                    dog.setGroomService(sc.nextLine()); 
                    System.out.print("Groom price: ");
                    float groomPrice = sc.nextFloat();
                    dog.setGroomCost(sc.nextFloat());
                    sc.nextLine();
                 
                    System.out.print("Is " + dog.getFirstname() + " participating in daycare?(yes/no): ");
                    String daycareService = sc.nextLine();
                    if (daycareService.equalsIgnoreCase("yes")){
                        dog.setDaycareService(daycareService);
                        System.out.print("Daycare cost: ");
                        dog.setCostDaycare(sc.nextFloat());
                        sc.nextLine();
                        System.out.println("");
                        dog.setTotalCost(dog.getGroomCost(),dog.getBoardingCost(),dog.getCostDaycare(),dog.getCostAdditionalService());
                        System.out.println(dog.dogBasicInfo());
                        System.out.println(dog.dogInfo());
                        
                }
            }
        }
        }
        
        
        String fileName = "C:\\Users\\corn_\\OneDrive\\Documents\\dogFiles\\Dro.txt";
        File dogsNewFile = new File(fileName);
        dogsNewFile.createNewFile();
        
        
        
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        ObjectOutput out = null;
        try {
            out = new ObjectOutputStream(bos);   
            out.writeObject(dog);
            out.flush();
            byte[] yourBytes = bos.toByteArray();
        }finally{
            try{
                bos.close();
            }catch(IOException ex){                               
    // ignore close exception
}
            catch(NullPointerException ex){}
}
        
}
}
